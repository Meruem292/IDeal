rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function isSelf(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    // --- Collection Rules ---

    // Admins can be created by the user themselves (to solve bootstrap issue)
    // Only other admins can read or delete them.
    match /admins/{userId} {
      allow read, delete: if isAdmin();
      allow create: if isSelf(userId);
    }

    // Students can be created by anyone via the registration form.
    // Only Admins can manage student records after creation.
    // Authenticated users can read student lists.
    match /students/{studentId} {
      allow create: if isAuth();
      allow read: if isAuth();
      allow update, delete: if isAdmin();

      // Sub-collections would go here if needed
    }

    // Faculty can only be managed by Admins.
    // Any authenticated user can read faculty data (e.g., for schedules).
    match /faculty/{facultyId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    // Sections and their schedules can only be managed by Admins.
    // Any authenticated user can read them.
    match /sections/{sectionId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
      
      match /schedules/{scheduleId} {
        allow read: if isAuth();
        allow create, update, delete: if isAdmin();
      }
    }
  }
}
