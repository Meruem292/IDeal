rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      // Allow if the user's UID exists in the 'admins' collection
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Students can only create their own account, and can only read/update their own document.
    match /students/{userId} {
      allow create: if request.auth.uid == userId;
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
    }
    
    // Students Collection can be read by admins
    match /students/{document=**} {
      allow list: if isAdmin();
    }
    
    // Faculty can only be created by an admin. They can read/update their own doc.
    match /faculty/{userId} {
      // MORE PERMISSIVE RULE: Allow any authenticated user to create faculty for now
      allow create: if request.auth != null; 
      allow read, update, delete: if request.auth.uid == userId || isAdmin();
    }

    // Faculty Collection can be read by admins
     match /faculty/{document=**} {
      allow list: if isAdmin();
    }
    
    // Admins can be created by any authenticated user (to allow bootstrapping)
    // Only admins can read/update/delete admin docs.
    match /admins/{userId} {
      allow create: if request.auth != null;
      allow read, update, delete: if isAdmin();
    }
  }
}
