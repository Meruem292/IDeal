rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles from their respective collections
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function isFaculty() {
      return exists(/databases/$(database)/documents/faculty/$(request.auth.uid));
    }
    
    function isStudent(studentId) {
      return request.auth.uid == studentId;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the 'students' collection
    match /students/{studentId} {
      // Allow user to create their own student document during registration
      allow create: if isStudent(studentId);
      
      // Allow a student to read and update their own document
      // Allow faculty and admins to read any student document
      allow read: if isStudent(studentId) || isFaculty() || isAdmin();
      allow update: if isStudent(studentId) || isAdmin();
      
      // Only admins can delete student documents
      allow delete: if isAdmin();
    }
    
    // Rules for the 'faculty' collection
    match /faculty/{facultyId} {
      // Any authenticated user can read faculty info (e.g., for section assignment)
      // Admins can create, update, and delete faculty members
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Rules for the 'admins' collection
    match /admins/{adminId} {
      // Only other admins can manage admin documents
      allow read, write: if isAdmin();
    }

    // Rules for the 'sections' collection and its subcollections
    match /sections/{sectionId} {
      // Admins and faculty can read section information
      allow read: if isAdmin() || isFaculty();
      // Only admins can create, update, or delete sections
      allow write: if isAdmin();

      // Rules for the 'schedules' subcollection
      match /schedules/{scheduleId} {
        // Admins and faculty can read schedules
        allow read: if isAdmin() || isFaculty();
        // Only admins can write to schedules
        allow write: if isAdmin();
      }
    }

    // Rules for the 'rfid_history' collection
    match /rfid_history/{scanId} {
      // An admin can read the entire history
      allow read: if isAdmin();
      // A student can read a scan record if the 'uid' in the document matches their own 'rfid'
      allow read: if exists(/databases/$(database)/documents/students/$(request.auth.uid))
                    && get(/databases/$(database)/documents/students/$(request.auth.uid)).data.rfid == resource.data.uid;
      
      // Disallow any client-side writes to the history
      allow write: if false; 
    }
  }
}
