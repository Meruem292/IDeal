rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isStudent() {
      return exists(/databases/$(database)/documents/students/$(request.auth.uid));
    }
    
    function isFaculty() {
      return exists(/databases/$(database)/documents/faculty/$(request.auth.uid));
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Any authenticated user can check if their own UID exists in these collections.
    // This is required for the login logic to verify a user's role.
    match /admins/{userId} {
      allow get: if request.auth.uid == userId;
      // Admins can read/write the entire collection
      allow read, write: if isAdmin();
    }
    
    match /faculty/{userId} {
      allow get: if request.auth.uid == userId;
      // Admins can manage faculty
      allow list, write: if isAdmin();
    }

    match /students/{studentId} {
      // Allow unauthenticated users to create a student document (register)
      allow create: if request.auth.uid == studentId;
      
      // An authenticated user can get their own document
      allow get: if request.auth.uid == studentId;
      // An authenticated user can update their own document
      allow update(diff) : if request.auth.uid == studentId && diff.size() == 1 && diff.affectedKeys().hasOnly(['rfid']);
      allow update : if request.auth.uid == studentId && diff.size() > 1;


      // Admins and faculty can view all student data
      allow list, get: if isAdmin() || isFaculty();
      // Admins can manage all student data
      allow write: if isAdmin();
    }

    match /sections/{sectionId} {
      allow read: if isAdmin() || isFaculty();
      allow write: if isAdmin();

      match /schedules/{scheduleId} {
        allow read: if isAdmin() || isFaculty();
        allow write: if isAdmin();
      }
    }

    match /rfid_history/{scanId} {
        allow read: if isAdmin();
        allow list: if isAdmin();

        // A student can only see their own scan history.
        allow list: if isStudent() && request.query.where.get('uid') == resource.data.uid;
    }
  }
}
